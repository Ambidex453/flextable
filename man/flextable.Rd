% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/flextable.R
\name{flextable}
\alias{bg}
\alias{dim.flextable}
\alias{flextable}
\alias{knit_print.flextable}
\alias{padding}
\alias{print.flextable}
\alias{set_border}
\alias{set_display}
\alias{set_style}
\alias{set_width}
\alias{vanilla_table}
\title{Create flextable object}
\usage{
flextable(data, select = names(data))

vanilla_table(data, row.names = TRUE)

\method{print}{flextable}(x, ...)

\method{dim}{flextable}(x)

set_width(x, j = NULL, ..., width)

set_display(x, i = NULL, part = "body", ...)

set_style(x, ..., i = NULL, j = NULL, part = "body")

bg(x, i = NULL, j = NULL, color, part = "body")

padding(x, i = NULL, j = NULL, padding.top = NULL,
  padding.bottom = NULL, padding.left = NULL, padding.right = NULL,
  part = "body")

set_border(x, i = NULL, j = NULL, border.top = NULL,
  border.bottom = NULL, border.left = NULL, border.right = NULL,
  part = "body")

\method{knit_print}{flextable}(x, ...)
}
\arguments{
\item{data}{dataset}

\item{select}{columns names/keys to display}

\item{row.names}{should row.names be displayed or not}

\item{x}{\code{flextable} to modify}

\item{...}{see section \code{Formatting data values} and
\code{Styling - formatting properties}.}

\item{j}{columns selection}

\item{i}{rows selection}

\item{part}{partname of the table}

\item{color}{color to use as background color}

\item{padding.top, padding.bottom, padding.left, padding.right}{paddings per side}

\item{border.bottom, border.left, border.top, border.right}{\code{\link{pr_border}} for borders.}

\item{x}{\code{flextable} to modify}

\item{...}{see section \code{Formatting data values} and
\code{Styling - formatting properties}.}

\item{padding}{padding (top, bottom, left and right)}
}
\description{
Create an object of class \code{flextable}.

\code{flextable} are designed to make tabular reporting easier for
R users.

An API lets you format text, paragraphs and cells, table elements can
be merge vertically or horizontally.

A \code{flextable} is made of 3 parts: header, body and footer.
}
\section{Formatting data values}{


Use format_that or format_simple to define cell content.



Use format_that or format_simple to define cell content.
}

\section{Styling - formatting properties}{


Table text, paragraphs and cells can be modified with
\code{set_style} function.
}

\section{Styling - background color}{


set background color with function \code{set_bg}.
}

\section{Styling - padding}{


set paragraphs paddings with function \code{padding}.
}

\section{Styling - borders}{


set cell borders with function \code{set_border}.
}
\examples{
ft <- flextable(mtcars)
write_docx("ft.docx", ft)
vanilla_table(head(iris))

# Formatting data values example ------
ft <- vanilla_table(head( mtcars, n = 10))
ft <- set_display(ft, i = ~ drat > 3.5,
  gear = format_that("# {{ carb_ }}",
    carb_ = ftext(carb, pr_text(color="orange") ) ) )
write_docx("format_ft.docx", ft)

# Formatting data values example ------
ft <- vanilla_table(head( mtcars, n = 10))
ft <- set_display(ft, i = ~ drat > 3.5,
  gear = format_that("# {{ carb_ }}",
    carb_ = ftext(carb, pr_text(color="orange") ) ) )
write_docx("format_ft.docx", ft)

# Styles example ------
def_cell <- pr_cell(border.bottom = pr_border(),
  border.top = pr_border(),
  border.left = pr_border(),
  border.right = pr_border())

def_par <- pr_par(text.align = "center")

ft <- flextable(mtcars)

ft <- set_style( ft, def_cell, def_par, parts = c("body"))
ft <- set_style( ft, def_cell, def_par, parts = c("header"))
ft <- set_style(ft, ~ drat > 3.5, ~ vs + am + gear + carb,
  pr_text(color="red", italic = TRUE) )

write_docx("style_ft.docx", ft)

# bg example ------
ft <- flextable(mtcars)
ft <- set_bg(ft, color = "#DDDDDD", part = "header")

# bg example ------
ft <- flextable(mtcars)
ft <- padding(ft, padding.top = 4)

# set_bg example ------
ft <- flextable(mtcars)
ft <- set_border(ft, border.top = pr_border(color = "orange") )
}
\seealso{
\code{\link{formatting_functions}}

\code{\link{formatting_functions}}
}

